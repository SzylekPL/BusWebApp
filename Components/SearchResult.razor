<div>
	<input type="text" placeholder="@InputPlaceholder" @oninput="UpdateResults" />
	@if(InputValue != string.Empty)
	{
		@foreach (KeyValuePair<string, string> result in GetResults())
		{
			<div @onclick="()=>OnResultClick(result.Value)">
				<div>@result.Value</div>
				<div>By tag: @result.Key</div>
			</div>
		}
	}
</div>

@code {
	private string InputValue = string.Empty;
	private Dictionary<string, string> GetResults() => TagValuePairs.Where(x => x.Key.Contains(InputValue)).ToDictionary(x => x.Key, x => x.Value);
	private void UpdateResults(ChangeEventArgs e)
	{
		InputValue = e.Value.ToString();
		StateHasChanged();
	}

	[Parameter]
	[EditorRequired]
	public Dictionary<string, string> TagValuePairs { get; set; }
	[Parameter]
	public string InputPlaceholder { get; set; } = "Search...";
	[Parameter]
	public EventCallback<string> ResultSelected { get; set; }
	private async Task OnResultClick(string resultText) => await ResultSelected.InvokeAsync(resultText);
}
