@page "/LineVisualization";

<div class="container my-4">
	<div class="row">
		<div class="col-8">
			@foreach (var item in linie.Content)
			{
				<div class="border rounded mt-3">
					@if (!item.Expanded)
					{
						<div class="col-12 pt-3 p-3" @onclick="async() => await PrzelaczRozwiniecie(item)">Linia @item.Name</div>
					}
					else
					{
						<div class="text-center">
							<h3 class="p-2" @onclick="async() => await PrzelaczRozwiniecie(item)">Linia @item.Name</h3><br />
							<a href="/Tickets"><button class="btn btn-primary col-4 mb-3">Kup bilet</button></a>
						</div>
					}
				</div>
			}
		</div>



		<div class="col-4">
			@foreach (var x in StopPointsToDisplay.Content)
			{
				<BusWebApp.Components.DotBus StopPoint="@x" />
			}
		</div>
	</div>
</div>


@code {
	StopPointWrapper StopPointsToDisplay = new StopPointWrapper() { Content = new StopPoint[] { } };
	LineWrapper linie = new LineWrapper() { Content = new Line[] { } };

	protected override void OnInitialized()
	{
		base.OnInitialized();
		linie.Content = JsonService.Lines;
	}


	private async Task PrzelaczRozwiniecie(Line item)
	{
		bool czyExpandowac = item.Expanded ? false : true;
		Console.WriteLine(czyExpandowac);
		foreach(var g in linie.Content)
		{
			g.Expanded = false;
		}
		item.Expanded = czyExpandowac;
		StopPointsToDisplay.Content = new StopPoint[] { };
		if(item.Expanded)
			StopPointsToDisplay.Content = await JsonService.GetStopsByCourse($"{item.Id}", false);
	}

}
